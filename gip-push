function help() {
    echo "Usage: gip-push [-echo] [--current | <branch-name>] [--master] [--yes]"
}

FORCE=

for argg in "$@"
  do
    if [[ $argg == "--current" || $argg == "-current" ]]; then
        CURRENT=yes
        CONFIRM=yes
    elif [[ $argg == "--yes" || $argg == "-yes" ]]; then
        echo -e "\nOkay I won't ask for confirmation...!\n"
        NO_CONFIRM=yes
    elif [[ $argg == "--master" || $argg == "-master" ]]; then
        DO_DEFAULT_BRANCH="--master"
    elif [[ $argg == -h* || $argg == --h* ]]; then
        help
        exit 0
    elif [[ $argg == -echo ]]; then
        shift
        echo=1
    elif [[ $argg == -* ]]; then
        echo "Error: Don't know what to do with: ${argg}"
        exit 1
    elif [[ ! $bra ]]; then
        bra="$argg"
        shift
    else
        echo "Error: Don't know what to do with: $argg ... branch already specified as $bra"
    fi
  done

if [[ $CURRENT ]]; then
    if [[ $bra ]]; then
        echo "Error: Specified both --current and a branch: $bra"
        help
        exit 1
    fi
    bra=$(gip-branch-get-name)
fi
if [[ $NO_CONFIRM ]]; then
    unset CONFIRM
fi
if [[ ! $bra ]]; then
    echo "Error: Need a branch"
    help
    exit 1
fi

echo "Branch: $bra"

if [[ $echo ]]; then
  echo "git push --set-upstream origin \"$bra\""
  exit 0
fi

if [[ ! $DO_DEFAULT_BRANCH ]]; then
    gip-avoid-default-branch $bra || exit 1
fi

echo ""
echo "Command: git push --set-upstream origin \"$bra\""
echo ""
if [[ $CONFIRM ]]; then
    echo -n "Push \"$bra\"? "
    read yn
    yn=$(echo $yn | gawk '{print tolower($0)}')
    if [[ $yn != y* ]]; then
      echo 'Pfft, you weenie'
      exit 0
    fi
fi

git push --set-upstream origin "$bra"
